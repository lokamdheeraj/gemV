#include "base/vulnerability/vul_rename.hh"

void 
RenameVulCalc::init(int _size_int, int _size_float, int _size_cc)
{
    size = _size_int + _size_float + _size_cc;

    for(unsigned i = 0; i < size; ++i)
        histories.push_back(History());

}

long
RenameVulCalc::vulOnRead(PhysRegIndex phys_reg, int freeRegs)
{
    long vul = 0;

    assert(phys_reg < size);

    vul = curTick() - histories[phys_reg].t;

    histories[phys_reg].t = curTick();

    histories[phys_reg].op = READ;

    return (RENAME_MAP_ENTRY_SIZE)*vul;

}

long
RenameVulCalc::vulOnWrite(PhysRegIndex phys_reg, int freeRegs)
{
    assert(phys_reg < size);

    long vul = 0;

    if(histories[phys_reg].incomingTick != -1)
        vul = curTick() - histories[phys_reg].t;

    histories[phys_reg].op = WRITE;

    histories[phys_reg].incomingTick = curTick();
    
    histories[phys_reg].t = histories[phys_reg].incomingTick;

    return (RENAME_MAP_ENTRY_SIZE)*vul;
}
