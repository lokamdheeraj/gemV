
#include "base/vulnerability/vul_mshr.hh"

MshrVulCalc::MshrVulCalc(int _numEntries)
    : numEntries(_numEntries)
{
    for(unsigned i = 0; i < numEntries; ++i)
        histories.push_back(History());  
}

void
MshrVulCalc::vulOnAllocate(int index)
{
    assert(index <= numEntries);
    histories[index-1].incomingTick = curTick();
    histories[index-1].op = INCOMING; 
}

long
MshrVulCalc::vulOnDeallocate(int index)
{
    assert(index <= numEntries);
    long vul = 0;
    if(histories[index].incomingTick != -1) {
        vul = curTick() - histories[index].incomingTick;
        histories[index].incomingTick = -1;
        histories[index].op = EVICTION;
     }
     return vul;
}
